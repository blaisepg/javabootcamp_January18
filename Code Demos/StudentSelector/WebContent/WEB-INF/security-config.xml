<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http auto-config="true" use-expressions="true">

        <intercept-url pattern="/index/**"
                       access="permitAll" />
        <intercept-url pattern="/getstudentlist/**"
                       access="permitAll" />

        <intercept-url pattern="/addstudents/**" method="POST"
                       access="hasAnyRole('ROLE_ADMIN')" />

        <intercept-url pattern="/admin/**"
                       access="hasAnyRole('ROLE_ADMIN')" />

        <intercept-url pattern="/getrandomstudents/**"
                       access="hasAnyRole('ROLE_ADMIN')" />

        <intercept-url pattern="/resetstudentlist/**"
                       access="hasAnyRole('ROLE_ADMIN')" />

        <form-login login-page='/login' username-parameter="username"
                    password-parameter="password" default-target-url="/"
                    authentication-failure-url="/login?authfailed" />
        <logout logout-success-url="/login?logout" />

        <access-denied-handler error-page="/403page" />

        <http-basic />
        <!--<remember-me />-->
        <csrf />
    </http>
    <!-- Database authentication provider -->
    <authentication-manager>
        <!--Use custom userdetails-->
        <authentication-provider user-service-ref="customUserDetailsService" >
            <!--<password-encoder hash="md5"/>-->
            <!-- bcrypt calculator to create bcrypted passwords into DB: https://www.dailycred.com/article/bcrypt-calculator -->
            <password-encoder hash="bcrypt" ><!--Automatically generates salt value-->
            </password-encoder>
            <!--<password-encoder hash="md5"/>-->
           <!-- <jdbc-user-service data-source-ref="dataSource"
            users-by-username-query="select username,password,enabled from users where username=?"
            authorities-by-username-query="select username,role from user_roles where username =?" />-->
        </authentication-provider>
    </authentication-manager>

    <!-- In memory authentication provider -->
<!--    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="testuser" password="password" authorities="ROLE_BUYER"/>
                <user name="eclipse" password="password" authorities="ROLE_SELLER"/>
                <user name="admin" password="password" authorities="ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>-->

    <!-- Hibernate UserDAO as the authentication provider -->
    <!-- <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="employeeDAO" />
    </authentication-manager> -->
</beans:beans>